package hep.lcio.event ;

@java{
import hep.lcio.exceptions.* ;
}

/** Simple interface to store generic user data.
 * To store your own classes they have to implement
 * this interface.
 * 
 * @author gaede 
 * @version $Id: LCGenericObject.aid,v 1.2 2004-08-20 16:45:23 gaede Exp $
 */

public interface LCGenericObject extends LCObject 

{

    /** Number of integer values stored in this object.
     */
    public int getNInt() const ;

    /** Number of float values stored in this object.
     */
    public int getNFloat() const ;

    /** Number of double values stored in this object.
     */
    public int getNDouble() const ;

    /** Returns the integer value for the given index.
     */
    public int getIntVal( int index ) const ;

    /** Returns the float value for the given index.
     */
    public float getFloatVal( int index )const ;

    /** Returns the double value for the given index.
     */
    public float getDoubleVal( int index )const ;

    /** True if objects of the implementation class have a fixed size, i.e
     * getNInt, getNFloat and getNDouble will return values that are constant during 
     * the lifetime of the object.
     */
    public boolean isFixedSize() const ;


    /** The type name of the user class (typically the class name)
     */
    public const String& getTypeName() const ;


    /** The description string. A comma separated list of pairs of
     *  type identifier, one of 'i','f','d' followed by ':' 
     *  and an attribute name, e.g. "i:cellId,f:offset,f:gain".
     */
    public const String& getDataDescription() const ;


    @cpp{
	/** Provide default implementation for id
	 */
	virtual int id() {  return 0 ; }  
    }

}

