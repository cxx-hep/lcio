package hep.lcio.event;

@ifdef cpp
@cpp{
class TrackerHit ;
typedef std::vector<TrackerHit*> TrackerHitVec ;
}
@endif

/** A generic tracker hit to be used by pattern recognition.
 * 
 * @author gaede
 * @version $Id: TrackerHit.aid,v 1.8 2004-09-15 13:29:07 gaede Exp $
 */

public interface TrackerHit extends LCObject {
    
    /** The hit  position in [mm].	
     */
    public const double3V getPosition() const ;

    /**Covariance of the position (x,y,z)
     */
    public const FloatVec& getCovMatrix() const ;

    /** The dE/dx of the hit in [GeV].
     */ 	
    public float getdEdx() const ;
    
    /** The  time of the hit in [ns].
     */
    public float getTime() const ;	

    //     /**Type of raw data hit, either one of<br>
    //      * LCIO::TPCHIT<br>
    //      * LCIO::SIMTRACKERHIT<br>
    //      */
    //    public const String& getType() const ;

    /** Type of hit. Mapping of integer types to type names
     * through collection parameters "TrackerHitTypeNames"
     * and "TrackerHitTypeValues".
     */
    public int getType() const ;


    /** The raw data hits. 
     * Check getType() to get actual data type.
     */
    public const LCObjectVec& getRawHits() const ;


//     public void setPosition( double3V pos) ;
//     public void setCovMatrix( const FloatVec& cov) ;
//     public void setdEdx( float dEdx ) ;
//     public void setTime( float time ) ;
//     public void setTPCHit( TPCHit* hit ) ;

}
