package hep.lcio.event ;

@ifdef cpp
@cpp{
class Cluster ;
typedef std::vector<Cluster*> ClusterVec ;
}
@endif

/** The LCIO cluster.
 * 
 * @author gaede
 * @version Mar 26, 2004
 */


public interface Cluster extends LCObject {
    
@ifdef cpp
@cpp{
     static const int UNKNOWN =  0 ; 
     static const int ECAL =  1 ; 
     static const int HCAL =  2 ; 
     static const int COMBINED =  3 ; 
     static const int LAT =  4 ; 
     static const int LCAL =  5 ;     
     static const int UNDEFINED =  0 ; 
     static const int NEUTRAL =  1 ; 
     static const int CHARGED =  2 ; 
}
 @else
     public static const int UNKNOWN =  0 ; 
     public const int ECAL =  1 ;     
     public const int HCAL =  2 ;     
     public const int COMBINED =  3 ; 
     public const int LAT =  4 ;      
     public const int LCAL =  5 ;     
     public static const int UNDEFINED =  0 ; 
     public static const int NEUTRAL =  1 ; 
     public static const int CHARGED =  2 ; 
 @endif 


    /** Type of cluster:<br>
     *  ------------- detector:(bits31-16): ECAL,HCAL,COMBINED,LAT,LCAL
     *  Cluster::UNKNOWN <br> 
     *  Cluster::ECAL <br> 
     *  Cluster::HCAL <br> 
     *  Cluster::COMBINED <br> 
     *  Cluster::LAT <br> 
     *  Cluster::LCAL <br> 
     *	--------- track cluster link (bits15-0):
     *  Cluster::NEUTRAL <br> 
     *  Cluster::CHARGED <br> 
     *  Cluster::UNDEFINED <br> 
     */
    public int getType() const ;	
    
    /** Energy of the cluster.
     */
    public float getEnergy() const ;	

    /** Position of the cluster.
     */
    public const float3V getPosition() const;

    /** Covariance matrix of the position (6 Parameters)
    */
    public const FloatVec& getPositionError() const ;


    /** Intrinsic direction of cluster at position: Theta.
     */
    public float getTheta() const ;	

    /** Intrinsic direction of cluster at position: Phi.
     */
    public float getPhi() const ;	

    /** Covariance matrix of the direction (3 Parameters)
     */
    public const FloatVec& getDirectionError() const ;

    /** Shape parameters (6 Parameters) - TO DO: definition
     */
    public const FloatVec& getShape() const ;

    /** Type hypotheses: 3 Parameters: compatible with EM, HAD, muon cluster
     */
    public const FloatVec& getParticleType() const ;

    /** The clusters that have been combined to this cluster.
     */
    public const ClusterVec& getClusters() const ; 

    /** The hits that have been combined to this cluster.
     *  Only available if CalorimeterHit objects have been saved with
     *  LCIO::RCHBIT_PTR==1.
     *  @see CalorimeterHit
     */
    public const CalorimeterHitVec& getCalorimeterHits() const ;

    /** Returns the energy contribution of the hits 
     *  Runs parallel to the CalorimeterHitVec from getCalorimeterHits()
     */
    public const FloatVec& getHitContributions() const ;


//     /** Returns the names of the hit collections that have been
//      *  used to create the cluster.
//      */
//     public const StringVec&  getHitCollectionNames() const ;
    
//     /** Returns the hit indices for the given collection name.
//      */
//     public const IntVec& getHitIndicesForCollection(const String& colName ) const ;

//     /** Returns the energy contribution from the hits in the given collection.
//      * Runs parallel to the IntVec from getHitIndicesForCollection()
//      */
//     public const FloatVec& getHitContributionsForCollection(const String& colName ) const ;



}
