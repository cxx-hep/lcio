package hep.lcio.event;

@java{
import hep.lcio.exceptions.* ;
}
/**The main event interface. Holds named collections
 * with elements of type LCObject ('untyped'). Users have to cast to
 * the corresponding types.  
 * Adds methods to add.remove collections to LCEventData.
 * 
 * @author gaede
 * @version Mar 4, 2003
 * @see LCCollection
 * fg 20030607 extends the corresponding data interface
 */

public interface LCEvent extends LCEventData{
    
@ifdef overwriteDataInterface
    /** Return the run number off this data.
     */
    public int getRunNumber() const ;
    
    /** Returns this data's number .
     */
    public int getEventNumber() const ;
    
    /** Returns the name of the detector setup used in the simulation.
     */
    public const String& getDetectorName() const ;
    
    /** Returns the time stamp of the data.
     */
    public long getTimeStamp() const ;
    
    /** Returns the names of the collections in the  data.
     */
    public const String[]*  getCollectionNames() const ;
    
    /** Returns the collection for the given name - NULL if it doesn't exist.
     */ 
    public LCCollectionData* getCollectionData(const String& name) const ;

@endif

    /** Returns the collection for the given name.
     * Same as getCollectionData() except that no cast to (LCCollection) and check for 
     * NULL pointer/reference is needed.  
     *
     * @throws DataNotAvailableException
     */
     public LCCollection* getCollection(const String& name) const throws DataNotAvailableException ;


    /** Adds a collection with the given name. Throws an exception if the name already
     * exists in the event. NB: Adding collections is allowed even when the event is 'read only'.
     * 
     *@throws EventException
     */ 
    public void addCollection(LCCollection* col ,const  String& name ) throws EventException ;
    
    /** Removes (and deletes) the collection with name (if it exists in the event). 
     * Throws an exception if the event is 'read only' as defined by the read mode in LCReader.
     *
     *@throws ReadOnlyException
     */ 
    public void removeCollection(const  String& name ) throws ReadOnlyException ;
    
}
