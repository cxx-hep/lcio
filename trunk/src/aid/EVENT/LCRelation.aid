package hep.lcio.event ;

@java{
import hep.lcio.exceptions.* ;
}

/** Interface for relationships between LCObjects. 
 *  Each relationship consists of a "from" a "to" and a "weight" (may be 1).
 *  The list can be searched for all relationships involving a certain "from"
 *  object, or all relationships involving a certain "to" relationship. 
 *  New relationships can be added or removed, but doing so invalidates any
 *  previously returned list of relationships. 
 * EXPERIMENTAL code !!
 * 
 * @author gaede 
 * @version Apr 15, 2004
 * @see LCObject
 */

public interface LCRelation
{

    /**The type of the 'from' objects in this relation.
     */
    public const String& getFromType() const ;

    /**The type of the 'to' objects in this relation.
     */
    public const String& getToType() const ;

    /** The total number of stored relations. 
     */
    public int numberOfRelations() const; 

    /** The 'from' object of the given relation. 
     */
    public LCObject* getFrom( int index ) const;
    
    /** The 'to' object of the given relation. 
     */
    public LCObject* getTo( int index ) const;

    /** The weight of the given relation. 
     */
    public float getWeight( int index ) const;

    /** Get the list of objects involving the given "from" object
     */
    public IntVec getRelationsFrom(LCObject* from) const;

    /** Get the list of objects involving the given "to" object
     */
    public IntVec getRelationsTo(LCObject* to) const;

    /** Add a new relation. 
     */
    public void addRelation(LCObject* from, LCObject* to, float weight=1.0);
    
    /** Remove a given relation.
     */
    public void removeRelation(int index);
}