package hep.lcio.event;

@ifdef cpp
@cpp{
class TrackerHit ;
typedef std::vector<TrackerHit*> TrackerHitVec ;
}
@endif

/** A generic tracker hit to be used by pattern recognition.
 * 
 * @author gaede
 * @version Apr 7, 2004
 */

public interface TrackerHit extends LCObject {
    
    /** The hit  position in [mm].	
     */
    public const double3V getPosition() const ;

    /**Covariance of the position (x,y,z)
     */
    public const FloatVec& getCovMatrix() const ;

    /** The dE/dx of the hit in [GeV/mm].
     */ 	
    public float getdEdx() const ;
    
    /** The  time of the hit in [ns]. Is this needed ?
     */
    public float getTime() const ;	

    /**Type of raw data hit, either one of<br>
     * LCIO::TPCHIT<br>
     * LCIO::SIMTRACKERHIT<br>
     */
    public const String& getType() const ;

    /**The raw data hit. Type is one 
     * of TPCHit, VTXHit,...
     * User has to check with cast.
     */
    public LCObject* getRawDataHit() const ;




    public void setPosition( double3V pos) ;
    public void setCovMatrix( const FloatVec& cov) ;
    public void setdEdx( float dEdx ) ;
    public void setTime( float time ) ;
    public void setTPCHit( TPCHit* hit ) ;

}
