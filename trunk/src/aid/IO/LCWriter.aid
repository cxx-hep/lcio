package hep.lcio.io;

/**Interface for LCWriter objects - there will be one 
 * implementation per data format, e.g. SIO, Root, ASCII. 
 * 
 * @author gaede
 * @version Mar 4, 2003
 */
public interface LCWriter {

    /** Opens a file for writing and returns LCIO::SUCCESS if 
     * no error occured. If file with given name exists, it will be opened in
     * append-mode.
     */
    public int open(const String& filename ) throws IOException ;

    /** Opens a file for writing and returns LCIO::SUCCESS if 
     *  no error occured. Possible write modes are: LCIO::WRITE_NEW
     * (existing files are replaced) and LCIO::WRITE_APPEND. 
     */
    public int open(const String& filename , int writeMode ) ;

    
    /** Writes the given run header to file and returns LCIO::SUCCESS if no error occured.
     */
    public int writeRunHeader(const LCRunHeader*  hdr) ;

    /** Writes the given event to file and returns LCIO::SUCCESS if no error occured.
     */
    public int writeEvent(const LCEvent*  evt) ;
    
    /** Closes the output file/stream etc and returns LCIO::SUCCESS if no error occured.
     */
    public int close() ;
    
}
